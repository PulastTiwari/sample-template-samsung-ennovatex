      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # Use the tracked src/frontend/.vercel/project.json for project/org info
          # Pass the local config to ensure the root directory is src/frontend
          npx vercel@28 deploy --prod --yes --local-config src/frontend/vercel.json --token $VERCEL_TOKEN --cwd src/frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install and build (npm in src/frontend)
        run: |
          npm --prefix src/frontend ci --no-audit --no-fund || npm --prefix src/frontend install --legacy-peer-deps
          npm --prefix src/frontend run build

      - name: Debug show vercel project and env
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "--- project.json ---"
          cat src/frontend/.vercel/project.json || true
          echo "--- env vars ---"
          echo "VERCEL_TOKEN set: ${VERCEL_TOKEN:+yes}"
          echo "VERCEL_ORG_ID: $VERCEL_ORG_ID"
          echo "VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID"
          echo "--- npx & vercel version ---"
          which npx || true
          npx --version || true
          npx vercel@28 --version || true

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # Use the tracked src/frontend/.vercel/project.json for project/org info
          npx vercel@28 deploy --prod --confirm --token $VERCEL_TOKEN --cwd src/frontend
